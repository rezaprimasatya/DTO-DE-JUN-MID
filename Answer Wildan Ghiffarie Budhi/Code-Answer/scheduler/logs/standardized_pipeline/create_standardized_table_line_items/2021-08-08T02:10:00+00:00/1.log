[2021-08-08 02:15:00,652] {taskinstance.py:896} INFO - Dependencies all met for <TaskInstance: standardized_pipeline.create_standardized_table_line_items 2021-08-08T02:10:00+00:00 [queued]>
[2021-08-08 02:15:00,704] {taskinstance.py:896} INFO - Dependencies all met for <TaskInstance: standardized_pipeline.create_standardized_table_line_items 2021-08-08T02:10:00+00:00 [queued]>
[2021-08-08 02:15:00,705] {taskinstance.py:1087} INFO - 
--------------------------------------------------------------------------------
[2021-08-08 02:15:00,706] {taskinstance.py:1088} INFO - Starting attempt 1 of 1
[2021-08-08 02:15:00,707] {taskinstance.py:1089} INFO - 
--------------------------------------------------------------------------------
[2021-08-08 02:15:00,742] {taskinstance.py:1107} INFO - Executing <Task(MySqlOperator): create_standardized_table_line_items> on 2021-08-08T02:10:00+00:00
[2021-08-08 02:15:00,754] {standard_task_runner.py:52} INFO - Started process 467 to run task
[2021-08-08 02:15:00,768] {standard_task_runner.py:76} INFO - Running: ['***', 'tasks', 'run', 'standardized_pipeline', 'create_standardized_table_line_items', '2021-08-08T02:10:00+00:00', '--job-id', '12', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/standardized_pipeline.py', '--cfg-path', '/tmp/tmppi4u9jdl', '--error-file', '/tmp/tmp8zvo5vaw']
[2021-08-08 02:15:00,772] {standard_task_runner.py:77} INFO - Job 12: Subtask create_standardized_table_line_items
[2021-08-08 02:15:00,927] {logging_mixin.py:104} INFO - Running <TaskInstance: standardized_pipeline.create_standardized_table_line_items 2021-08-08T02:10:00+00:00 [running]> on host d995c427c378
[2021-08-08 02:15:01,068] {taskinstance.py:1302} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=standardized_pipeline
AIRFLOW_CTX_TASK_ID=create_standardized_table_line_items
AIRFLOW_CTX_EXECUTION_DATE=2021-08-08T02:10:00+00:00
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2021-08-08T02:10:00+00:00
[2021-08-08 02:15:01,070] {mysql.py:70} INFO - Executing: CREATE TABLE IF NOT EXISTS standardized.line_items AS
WITH data_last_5_minutes AS (
	SELECT 
        DISTINCT
        CAST(L_ORDERKEY AS SIGNED) AS ORDER_KEY, 
        CAST(L_PARTKEY AS SIGNED) AS PART_KEY, 
        CAST(L_SUPPKEY AS SIGNED) AS SUPPLIER_KEY, 
        CAST(L_LINENUMBER AS SIGNED) AS LINE_TIME_NUMBER, 
        CAST(L_QUANTITY AS SIGNED) AS LINE_ITEM_QUANTITY, 
        CAST(L_EXTENDEDPRICE AS SIGNED) AS LINE_ITEM_EXTENDED_PRICE, 
        CAST(L_DISCOUNT AS SIGNED) AS LINE_ITEM_DISCOUNT, 
        CAST(L_TAX AS SIGNED) AS LINE_ITEM_TAX, 
        L_RETURNFLAG AS LINE_ITEM_RETURN_FLAG, 
        L_LINESTATUS AS LINE_ITEM_STATUS_TYPE, 
        CAST(L_SHIPDATE AS DATE) AS LINE_ITEM_SHIP_DATE, 
        CAST(L_COMMITDATE AS DATE) AS LINE_ITEM_COMMIT_DATE, 
        CAST(L_RECEIPTDATE AS DATE) AS LINE_ITEM_RECEIPT_DATE, 
        L_SHIPINSTRUCT AS LINE_ITEM_SHIP_INSTRUCTION_TYPE, 
        L_SHIPMODE AS LINE_ITEM_SHIP_MODE_TYPE, 
        L_COMMENT AS LINE_ITEM_COMMENT,
        NOW() AS INGESTION_TIMESTAMP
    FROM 
        datalake.LINEITEM
    WHERE 
        INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 5 MINUTE)
)

SELECT 
	* 
FROM 
	data_last_5_minutes
[2021-08-08 02:15:01,105] {base.py:78} INFO - Using connection to: id: dwh_id. Host: dwh, Port: 3306, Schema: , Login: root, Password: ***, extra: {}
[2021-08-08 02:15:01,134] {dbapi.py:204} INFO - Running statement: CREATE TABLE IF NOT EXISTS standardized.line_items AS
WITH data_last_5_minutes AS (
	SELECT 
        DISTINCT
        CAST(L_ORDERKEY AS SIGNED) AS ORDER_KEY, 
        CAST(L_PARTKEY AS SIGNED) AS PART_KEY, 
        CAST(L_SUPPKEY AS SIGNED) AS SUPPLIER_KEY, 
        CAST(L_LINENUMBER AS SIGNED) AS LINE_TIME_NUMBER, 
        CAST(L_QUANTITY AS SIGNED) AS LINE_ITEM_QUANTITY, 
        CAST(L_EXTENDEDPRICE AS SIGNED) AS LINE_ITEM_EXTENDED_PRICE, 
        CAST(L_DISCOUNT AS SIGNED) AS LINE_ITEM_DISCOUNT, 
        CAST(L_TAX AS SIGNED) AS LINE_ITEM_TAX, 
        L_RETURNFLAG AS LINE_ITEM_RETURN_FLAG, 
        L_LINESTATUS AS LINE_ITEM_STATUS_TYPE, 
        CAST(L_SHIPDATE AS DATE) AS LINE_ITEM_SHIP_DATE, 
        CAST(L_COMMITDATE AS DATE) AS LINE_ITEM_COMMIT_DATE, 
        CAST(L_RECEIPTDATE AS DATE) AS LINE_ITEM_RECEIPT_DATE, 
        L_SHIPINSTRUCT AS LINE_ITEM_SHIP_INSTRUCTION_TYPE, 
        L_SHIPMODE AS LINE_ITEM_SHIP_MODE_TYPE, 
        L_COMMENT AS LINE_ITEM_COMMENT,
        NOW() AS INGESTION_TIMESTAMP
    FROM 
        datalake.LINEITEM
    WHERE 
        INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 5 MINUTE)
)

SELECT 
	* 
FROM 
	data_last_5_minutes, parameters: None
[2021-08-08 02:15:01,141] {taskinstance.py:1501} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/models/taskinstance.py", line 1157, in _run_raw_task
    self._prepare_and_execute_task_with_callbacks(context, task)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/models/taskinstance.py", line 1331, in _prepare_and_execute_task_with_callbacks
    result = self._execute_task(context, task_copy)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/models/taskinstance.py", line 1361, in _execute_task
    result = task_copy.execute(context=context)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/providers/mysql/operators/mysql.py", line 72, in execute
    hook.run(self.sql, autocommit=self.autocommit, parameters=self.parameters)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/hooks/dbapi.py", line 184, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/hooks/dbapi.py", line 208, in _run_command
    cur.execute(sql_statement)
  File "/home/airflow/.local/lib/python3.6/site-packages/MySQLdb/cursors.py", line 206, in execute
    res = self._query(query)
  File "/home/airflow/.local/lib/python3.6/site-packages/MySQLdb/cursors.py", line 319, in _query
    db.query(q)
  File "/home/airflow/.local/lib/python3.6/site-packages/MySQLdb/connections.py", line 259, in query
    _mysql.connection.query(self, query)
MySQLdb._exceptions.OperationalError: (1067, "Invalid default value for 'INGESTION_TIMESTAMP'")
[2021-08-08 02:15:01,146] {taskinstance.py:1551} INFO - Marking task as FAILED. dag_id=standardized_pipeline, task_id=create_standardized_table_line_items, execution_date=20210808T021000, start_date=20210808T021500, end_date=20210808T021501
[2021-08-08 02:15:01,226] {local_task_job.py:149} INFO - Task exited with return code 1
[2021-08-08 02:17:24,954] {taskinstance.py:896} INFO - Dependencies all met for <TaskInstance: standardized_pipeline.create_standardized_table_line_items 2021-08-08T02:10:00+00:00 [queued]>
[2021-08-08 02:17:25,099] {taskinstance.py:896} INFO - Dependencies all met for <TaskInstance: standardized_pipeline.create_standardized_table_line_items 2021-08-08T02:10:00+00:00 [queued]>
[2021-08-08 02:17:25,108] {taskinstance.py:1087} INFO - 
--------------------------------------------------------------------------------
[2021-08-08 02:17:25,116] {taskinstance.py:1088} INFO - Starting attempt 1 of 1
[2021-08-08 02:17:25,127] {taskinstance.py:1089} INFO - 
--------------------------------------------------------------------------------
[2021-08-08 02:17:25,177] {taskinstance.py:1107} INFO - Executing <Task(MySqlOperator): create_standardized_table_line_items> on 2021-08-08T02:10:00+00:00
[2021-08-08 02:17:25,221] {standard_task_runner.py:52} INFO - Started process 681 to run task
[2021-08-08 02:17:25,252] {standard_task_runner.py:76} INFO - Running: ['***', 'tasks', 'run', 'standardized_pipeline', 'create_standardized_table_line_items', '2021-08-08T02:10:00+00:00', '--job-id', '26', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/standardized_pipeline.py', '--cfg-path', '/tmp/tmpc1njrviw', '--error-file', '/tmp/tmpgvtp0rve']
[2021-08-08 02:17:25,256] {standard_task_runner.py:77} INFO - Job 26: Subtask create_standardized_table_line_items
[2021-08-08 02:17:25,611] {logging_mixin.py:104} INFO - Running <TaskInstance: standardized_pipeline.create_standardized_table_line_items 2021-08-08T02:10:00+00:00 [running]> on host d995c427c378
[2021-08-08 02:17:26,088] {taskinstance.py:1302} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=standardized_pipeline
AIRFLOW_CTX_TASK_ID=create_standardized_table_line_items
AIRFLOW_CTX_EXECUTION_DATE=2021-08-08T02:10:00+00:00
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2021-08-08T02:10:00+00:00
[2021-08-08 02:17:26,106] {mysql.py:70} INFO - Executing: CREATE TABLE IF NOT EXISTS standardized.line_items (INGESTION_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP) AS
WITH data_last_5_minutes AS (
	SELECT 
        DISTINCT
        CAST(L_ORDERKEY AS SIGNED) AS ORDER_KEY, 
        CAST(L_PARTKEY AS SIGNED) AS PART_KEY, 
        CAST(L_SUPPKEY AS SIGNED) AS SUPPLIER_KEY, 
        CAST(L_LINENUMBER AS SIGNED) AS LINE_TIME_NUMBER, 
        CAST(L_QUANTITY AS SIGNED) AS LINE_ITEM_QUANTITY, 
        CAST(L_EXTENDEDPRICE AS SIGNED) AS LINE_ITEM_EXTENDED_PRICE, 
        CAST(L_DISCOUNT AS SIGNED) AS LINE_ITEM_DISCOUNT, 
        CAST(L_TAX AS SIGNED) AS LINE_ITEM_TAX, 
        L_RETURNFLAG AS LINE_ITEM_RETURN_FLAG, 
        L_LINESTATUS AS LINE_ITEM_STATUS_TYPE, 
        CAST(L_SHIPDATE AS DATE) AS LINE_ITEM_SHIP_DATE, 
        CAST(L_COMMITDATE AS DATE) AS LINE_ITEM_COMMIT_DATE, 
        CAST(L_RECEIPTDATE AS DATE) AS LINE_ITEM_RECEIPT_DATE, 
        L_SHIPINSTRUCT AS LINE_ITEM_SHIP_INSTRUCTION_TYPE, 
        L_SHIPMODE AS LINE_ITEM_SHIP_MODE_TYPE, 
        L_COMMENT AS LINE_ITEM_COMMENT,
        NOW() AS INGESTION_TIMESTAMP
    FROM 
        datalake.LINEITEM
    WHERE 
        INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 5 MINUTE)
)

SELECT 
	* 
FROM 
	data_last_5_minutes
[2021-08-08 02:17:26,169] {base.py:78} INFO - Using connection to: id: dwh_id. Host: dwh, Port: 3306, Schema: , Login: root, Password: ***, extra: {}
[2021-08-08 02:17:26,270] {dbapi.py:204} INFO - Running statement: CREATE TABLE IF NOT EXISTS standardized.line_items (INGESTION_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP) AS
WITH data_last_5_minutes AS (
	SELECT 
        DISTINCT
        CAST(L_ORDERKEY AS SIGNED) AS ORDER_KEY, 
        CAST(L_PARTKEY AS SIGNED) AS PART_KEY, 
        CAST(L_SUPPKEY AS SIGNED) AS SUPPLIER_KEY, 
        CAST(L_LINENUMBER AS SIGNED) AS LINE_TIME_NUMBER, 
        CAST(L_QUANTITY AS SIGNED) AS LINE_ITEM_QUANTITY, 
        CAST(L_EXTENDEDPRICE AS SIGNED) AS LINE_ITEM_EXTENDED_PRICE, 
        CAST(L_DISCOUNT AS SIGNED) AS LINE_ITEM_DISCOUNT, 
        CAST(L_TAX AS SIGNED) AS LINE_ITEM_TAX, 
        L_RETURNFLAG AS LINE_ITEM_RETURN_FLAG, 
        L_LINESTATUS AS LINE_ITEM_STATUS_TYPE, 
        CAST(L_SHIPDATE AS DATE) AS LINE_ITEM_SHIP_DATE, 
        CAST(L_COMMITDATE AS DATE) AS LINE_ITEM_COMMIT_DATE, 
        CAST(L_RECEIPTDATE AS DATE) AS LINE_ITEM_RECEIPT_DATE, 
        L_SHIPINSTRUCT AS LINE_ITEM_SHIP_INSTRUCTION_TYPE, 
        L_SHIPMODE AS LINE_ITEM_SHIP_MODE_TYPE, 
        L_COMMENT AS LINE_ITEM_COMMENT,
        NOW() AS INGESTION_TIMESTAMP
    FROM 
        datalake.LINEITEM
    WHERE 
        INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 5 MINUTE)
)

SELECT 
	* 
FROM 
	data_last_5_minutes, parameters: None
[2021-08-08 02:17:26,651] {dbapi.py:212} INFO - Rows affected: 0
[2021-08-08 02:17:26,730] {taskinstance.py:1211} INFO - Marking task as SUCCESS. dag_id=standardized_pipeline, task_id=create_standardized_table_line_items, execution_date=20210808T021000, start_date=20210808T021724, end_date=20210808T021726
[2021-08-08 02:17:26,935] {taskinstance.py:1265} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2021-08-08 02:17:26,977] {local_task_job.py:149} INFO - Task exited with return code 0
