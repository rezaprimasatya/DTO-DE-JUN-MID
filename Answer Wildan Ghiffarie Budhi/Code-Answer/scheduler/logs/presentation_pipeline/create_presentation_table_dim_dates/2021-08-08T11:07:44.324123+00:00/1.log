[2021-08-08 11:07:53,267] {taskinstance.py:896} INFO - Dependencies all met for <TaskInstance: presentation_pipeline.create_presentation_table_dim_dates 2021-08-08T11:07:44.324123+00:00 [queued]>
[2021-08-08 11:07:53,286] {taskinstance.py:896} INFO - Dependencies all met for <TaskInstance: presentation_pipeline.create_presentation_table_dim_dates 2021-08-08T11:07:44.324123+00:00 [queued]>
[2021-08-08 11:07:53,286] {taskinstance.py:1087} INFO - 
--------------------------------------------------------------------------------
[2021-08-08 11:07:53,287] {taskinstance.py:1088} INFO - Starting attempt 1 of 1
[2021-08-08 11:07:53,288] {taskinstance.py:1089} INFO - 
--------------------------------------------------------------------------------
[2021-08-08 11:07:53,296] {taskinstance.py:1107} INFO - Executing <Task(MySqlOperator): create_presentation_table_dim_dates> on 2021-08-08T11:07:44.324123+00:00
[2021-08-08 11:07:53,301] {standard_task_runner.py:52} INFO - Started process 608 to run task
[2021-08-08 11:07:53,307] {standard_task_runner.py:76} INFO - Running: ['***', 'tasks', 'run', 'presentation_pipeline', 'create_presentation_table_dim_dates', '2021-08-08T11:07:44.324123+00:00', '--job-id', '35', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/presentation_pipeline.py', '--cfg-path', '/tmp/tmp7hmae74j', '--error-file', '/tmp/tmp3ar2rml5']
[2021-08-08 11:07:53,310] {standard_task_runner.py:77} INFO - Job 35: Subtask create_presentation_table_dim_dates
[2021-08-08 11:07:53,366] {logging_mixin.py:104} INFO - Running <TaskInstance: presentation_pipeline.create_presentation_table_dim_dates 2021-08-08T11:07:44.324123+00:00 [running]> on host ce886ce1d63a
[2021-08-08 11:07:53,433] {taskinstance.py:1302} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=presentation_pipeline
AIRFLOW_CTX_TASK_ID=create_presentation_table_dim_dates
AIRFLOW_CTX_EXECUTION_DATE=2021-08-08T11:07:44.324123+00:00
AIRFLOW_CTX_DAG_RUN_ID=manual__2021-08-08T11:07:44.324123+00:00
[2021-08-08 11:07:53,435] {mysql.py:70} INFO - Executing: CREATE TABLE IF NOT EXISTS presentation.dates (
    DATE_KEY INT NOT NULL AUTO_INCREMENT,
    `DAY` INT NOT NULL,
    `MONTH` INT NOT NULL,
    `YEAR` INT NOT NULL,
    INGESTION_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT `DATE_PK` PRIMARY KEY (DATE_KEY),
    CONSTRAINT `DATE_UNIQUE` UNIQUE KEY (`DAY`, `MONTH`, `YEAR`)
) AS

WITH order_dates AS (
	SELECT 
		ORDER_DATE as date
	FROM 
		standardized.orders
	WHERE 
		INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 1 HOUR)
	GROUP BY 
		ORDER_DATE 
),

shipdate AS (
	SELECT 
		LINE_ITEM_SHIP_DATE as date
	FROM
		standardized.line_items
	WHERE 
		INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 1 HOUR)
	GROUP BY 
		LINE_ITEM_SHIP_DATE 
),

commitdate AS (
	SELECT 
		LINE_ITEM_COMMIT_DATE as date
	FROM
		standardized.line_items
	WHERE 
		INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 1 HOUR)
	GROUP BY 
		LINE_ITEM_COMMIT_DATE 
),

receiptdate AS (
	SELECT 
		LINE_ITEM_RECEIPT_DATE as date
	FROM
		standardized.line_items
	WHERE 
		INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 1 HOUR)
	GROUP BY 
		LINE_ITEM_RECEIPT_DATE 
),

uniondate AS (
	SELECT * FROM order_dates
	UNION
	SELECT * FROM shipdate
	UNION
	SELECT * FROM commitdate
	UNION
	SELECT * FROM receiptdate
),

extracted_date AS (
	SELECT
		EXTRACT(DAY FROM `date`) AS DAY,
		EXTRACT(WEEK FROM `date`) AS WEEK,
		EXTRACT(MONTH FROM `date`) AS MONTH,
		EXTRACT(QUARTER FROM `date`) AS QUARTER,
		EXTRACT(YEAR FROM `date`) AS YEAR
	FROM 
		uniondate
)

SELECT
	NULL as DATE_KEY,
	`DAY`,
	`WEEK`,
	`MONTH`,
	`QUARTER`,
	`YEAR`,
	IF( `MONTH` >= 7 AND `MONTH` <= 12, `YEAR` + 1, `YEAR`) AS FISCAL_YEAR,
	NOW() AS INGESTION_TIMESTAMP
FROM 
	extracted_date

LIMIT 0
[2021-08-08 11:07:53,449] {base.py:78} INFO - Using connection to: id: dwh_id. Host: dwh, Port: 3306, Schema: , Login: root, Password: ***, extra: {}
[2021-08-08 11:07:53,462] {dbapi.py:204} INFO - Running statement: CREATE TABLE IF NOT EXISTS presentation.dates (
    DATE_KEY INT NOT NULL AUTO_INCREMENT,
    `DAY` INT NOT NULL,
    `MONTH` INT NOT NULL,
    `YEAR` INT NOT NULL,
    INGESTION_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT `DATE_PK` PRIMARY KEY (DATE_KEY),
    CONSTRAINT `DATE_UNIQUE` UNIQUE KEY (`DAY`, `MONTH`, `YEAR`)
) AS

WITH order_dates AS (
	SELECT 
		ORDER_DATE as date
	FROM 
		standardized.orders
	WHERE 
		INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 1 HOUR)
	GROUP BY 
		ORDER_DATE 
),

shipdate AS (
	SELECT 
		LINE_ITEM_SHIP_DATE as date
	FROM
		standardized.line_items
	WHERE 
		INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 1 HOUR)
	GROUP BY 
		LINE_ITEM_SHIP_DATE 
),

commitdate AS (
	SELECT 
		LINE_ITEM_COMMIT_DATE as date
	FROM
		standardized.line_items
	WHERE 
		INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 1 HOUR)
	GROUP BY 
		LINE_ITEM_COMMIT_DATE 
),

receiptdate AS (
	SELECT 
		LINE_ITEM_RECEIPT_DATE as date
	FROM
		standardized.line_items
	WHERE 
		INGESTION_TIMESTAMP >= DATE_SUB(NOW(), INTERVAL 1 HOUR)
	GROUP BY 
		LINE_ITEM_RECEIPT_DATE 
),

uniondate AS (
	SELECT * FROM order_dates
	UNION
	SELECT * FROM shipdate
	UNION
	SELECT * FROM commitdate
	UNION
	SELECT * FROM receiptdate
),

extracted_date AS (
	SELECT
		EXTRACT(DAY FROM `date`) AS DAY,
		EXTRACT(WEEK FROM `date`) AS WEEK,
		EXTRACT(MONTH FROM `date`) AS MONTH,
		EXTRACT(QUARTER FROM `date`) AS QUARTER,
		EXTRACT(YEAR FROM `date`) AS YEAR
	FROM 
		uniondate
)

SELECT
	NULL as DATE_KEY,
	`DAY`,
	`WEEK`,
	`MONTH`,
	`QUARTER`,
	`YEAR`,
	IF( `MONTH` >= 7 AND `MONTH` <= 12, `YEAR` + 1, `YEAR`) AS FISCAL_YEAR,
	NOW() AS INGESTION_TIMESTAMP
FROM 
	extracted_date

LIMIT 0, parameters: None
[2021-08-08 11:07:53,494] {dbapi.py:212} INFO - Rows affected: 0
[2021-08-08 11:07:53,510] {taskinstance.py:1211} INFO - Marking task as SUCCESS. dag_id=presentation_pipeline, task_id=create_presentation_table_dim_dates, execution_date=20210808T110744, start_date=20210808T110753, end_date=20210808T110753
[2021-08-08 11:07:53,554] {taskinstance.py:1265} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2021-08-08 11:07:53,566] {local_task_job.py:149} INFO - Task exited with return code 0
